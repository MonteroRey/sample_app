c
@user.password
@user.password_digest
@user = User.new(name:"B",email:"B@email.com",password: "foobar",password_confirmation: "foobar")
c
BCrypt::Engine.cost
BCrypt::Engine::MIN_COST 
BCrypt::Engine::MIN_COST :
cost = ActiveModel::SecurePassword.min_cost
c
User.digest
User
@user.password
@user.valid?
@user.authenticate("foobars")
@user.authenticate("foobar")
@user = User.new(name:"B",email:"B@email.com",password: "foobar",password_confirmation: "foobar")
c
@user.authenticate("foobar")
User.last.password_digest
@user = User.new(name:"B",email:"B@email.com",password: "foobar",password_confirmation: "foobar")
@user = User.new(name:"B",email:"B@email.com",passwords: "foobar",password_confirmation: "foobar")
User.last.password_digest
@user.password
@user.valid?
@user = User.new(name:"B",email:"B@email.com",password: "foobar",password_confirmation: "foobar")
User
c
quit
rails db:migrate
@user.authenticate('foobar')
params
@user.password_digest
user.password_digest
@user.password
quit
user.password
user.password_digest
user = User.find_by(email: "B@email.com")
@user.save
@user = User.new(name:"B",email:"B@email.com",password_digest: "foobar",password_confirmation: "foobar")
c
@user.authenticate('foobar')
@user.save!
@user.authenticate('foobar')
@user = User.new(name:"C",email:"C@email.com",password_digest: "foobar",password_confirmation: "foobar")
@user.authenticate('foobar')
@user = User.new(name:"B",email:"B@email.com",password_digest: "foobar",password_confirmation: "foobar")
@user.authenticate('foobar')
quit
@user.authenticate('foobar')
@user = User.new(name:"B",email:"B@email.com",password_digest: "foobar",password_confirmation: "foobar")
@user.authenticate('foobar')
User.all
@user.save!
@user = User.new(name:"C",email:"C@email.com",password_digest: "foobar",password_confirmation: "foobar")
@user = User.new(name:"B",email:"B@email.com",password_digest: "foobar",password_confirmation: "foobar")
@user.password_digest
@user.authenticate('foobar')
@user
c
@user.valid?
@user.password = @user.password_confirmation
@user = User.new(name:"B",email:"B@email.com",password_digest: "foobar",password_confirmation: "foobar")
c
@user.valid?
c
@user.valid?
@user = User.new(name:"B",email:"B@email.com",password_digest: "foobar",password_confirmation: "foobar")
c
C
FILL_IN
ENV["RAILS_ENV"]
c
help_path
c
get static_pages_help_url
static_pages_help_url
c
get users_new_url
users_new_url
users_new_path
c
new_path
c
user_new_path
user_new_url
users_new_url
c
help_path
c
root_path
c
root_path
c
base_title
page_title
c
page_title
c
page_title
c
base_title
page_title.empty?
page_title
c
duplicate_user.email = @user.email.upcase
 duplicate_user = @user.dup
duplicate_user.email = @user.email.upcase
@user.dup.email 
c
static_pages_about_url
static_pages_help_url
